# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define jobs to be invoked later in a workflow.
jobs:
  say-hello:
    docker:
      - image: circleci/python:3.8
    steps:
      - run: echo "Hello, world!"

  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    resource_class: small # <-- Move this out of the docker section
    steps:
      - checkout
      - run: |
          # Set the branch name and output the Sonar branch/org values for debugging
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: $SONAR_BRANCH"
          echo "Sonar org value is: $SONAR_ORG"
          
          # Run sonar-scanner with additional error handling and logging
          sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="." || { echo "SonarQube scanner failed"; exit 1; }

  newmantest:
    docker:
      - image: postman/newman:alpine
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            cd backend
            npm install
      - run:
          name: Run Newman Tests
          command: |
            cd backend/payment-portal/collection
            newman run APDS_Collections.json

# Orchestrate jobs using workflows
workflows:
  version: 2
  main-workflow:
    jobs:
      - say-hello
      - sonarqube
      - newmantest:
          requires:
            - sonarqube
